Question Link  - https://practice.geeksforgeeks.org/problems/the-celebrity-problem/1

//Initial template for C++

#include<bits/stdc++.h>
using namespace std;

 // } Driver Code Ends
//User function template for C++

class Solution 
{
    private:
    bool knows(vector<vector<int> >& M, int a, int b, int n){
        if(M[a][b] == 1){
            return true;
        }
        else{
            return false;
        }
    }
    public:
    //Function to find if there is a celebrity in the party or not.
    int celebrity(vector<vector<int> >& M, int n) 
    {
        // code here 
        stack<int> s;
        for(int i = 0; i < n; i++){
            s.push(i);
        }
        
        while(s.size() > 1){
            int a = s.top();
            s.pop();
            
            
            int b = s.top();
            s.pop();
            if(knows(M,a,b,n)){
                s.push(b);
            }
            else{
                s.push(a);
            }
        }
        //Final Step to check that last element of stack is celebrity or not !?
        int cantidate = s.top();
        
        bool rowcheck = false;
        int zeroCount = 0;
        for(int i = 0; i < n; i++){
            if(M[cantidate][i] == 0){
                zeroCount++;
            }
        }
        
        if(zeroCount == n){
            rowcheck = true;
        }
        
        int oneCount = 0;
        bool colcheck = false;
        
        for(int i = 0; i < n; i++){
            if(M[i][cantidate] == 1){
                oneCount++;
            }
        }
        
        if(oneCount == n-1){
            colcheck = true;
        }
        
        if(rowcheck == true and colcheck == true){
            return cantidate;
        }
        else return -1;
        
    }
};

// { Driver Code Starts.

int main()
{
    int t;
    cin>>t;
    while(t--)
    {
        int n;
        cin>>n;
        vector<vector<int> > M( n , vector<int> (n, 0));
        for(int i=0;i<n;i++)
        {
            for(int j=0;j<n;j++)
            {
                cin>>M[i][j];
            }
        }
        Solution ob;
        cout<<ob.celebrity(M,n)<<endl;

    }
}
  // } Driver Code Ends
